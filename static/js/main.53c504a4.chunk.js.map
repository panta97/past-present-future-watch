{"version":3,"sources":["components/Cover.tsx","components/Container.tsx","constants.ts","components/Titles.tsx","components/Hour.tsx","components/Hours.tsx","components/Minute.tsx","components/Minutes.tsx","utils.ts","components/TimeLine.tsx","components/TimeTitle.tsx","components/Watch.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Coord","Container","children","style","width","height","display","justifyContent","alignItems","watch","size","arcSize","arcColor","bgColor","coverColor","sliceColor","hourFontsize","minuteFontsize","minHourColor","pastfutureFontsize","presentFontsize","accentColor","paleColor","innerHourLen","innerMinuteLen","innerCoverRad","showingAngle","Math","PI","millInADay","millInAMin","as","rad","TitleType","Cover","getAngle","angle","coord","pos","X","cos","Y","sin","position","fill","d","borderRadius","backgroundColor","top","left","Hour","memo","hour","index","spanRef","useRef","useState","isAligned","setIsAligned","useEffect","setTimeout","ref","color","fontWeight","element","translation","scale","step","star","posY","getBoundingClientRect","posX","rotate","transform","calculateProps","current","hours","Array","map","_","i","Hours","currTime","showTransition","fontSize","transition","h","Minute","minute","String","padStart","minutes","Minutes","m","radius","rotAngle","TimeLine","calc","TimeTitle","type","Titles","PAST","Calc","PRESENT","FUTURE","textTransform","letterSpacing","Watch","today","Date","start","getFullYear","getMonth","getDate","getTime","setCurrTime","setShowTransition","tick","requestAnimationFrame","handleVisibilityChange","document","visibilityState","removeTransitionDelayed","addEventListener","removeEventListener","border","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53c504a4.chunk.js","sourcesContent":["import watch from \"../constants\";\n// as = angles\nconst as = [\n  (3 * Math.PI) / 2 + watch.showingAngle,\n  0,\n  Math.PI,\n  (3 * Math.PI) / 2 - watch.showingAngle,\n];\n// rad = radius\nconst rad = watch.size / 2;\nenum Coord {\n  X,\n  Y,\n}\n\nexport const Cover = () => {\n  const getAngle = (angle: number, coord: Coord): number => {\n    let pos = 0;\n    if (coord === Coord.X) {\n      pos = watch.size / 2 + (watch.size / 2) * Math.cos(angle);\n    }\n    if (coord === Coord.Y) {\n      pos = watch.size / 2 + (watch.size / 2) * Math.sin(angle);\n    }\n    return pos;\n  };\n\n  return (\n    <div\n      style={{\n        width: `${watch.size}`,\n        height: `${watch.size}`,\n        position: \"absolute\",\n      }}\n    >\n      <svg\n        style={{\n          width: `${watch.size}`,\n          height: `${watch.size}`,\n        }}\n      >\n        <path\n          style={{ fill: `${watch.coverColor}` }}\n          d={`M${rad},${rad} L${getAngle(as[0], Coord.X)},${getAngle(\n            as[0],\n            Coord.Y\n          )} A${rad},${rad} 1 0,1 ${getAngle(as[1], Coord.X)},${getAngle(\n            as[1],\n            Coord.Y\n          )} z`}\n        ></path>\n        <path\n          style={{ fill: `${watch.coverColor}` }}\n          d={`M${rad},${rad} L${getAngle(as[2], Coord.X)},${getAngle(\n            as[2],\n            Coord.Y\n          )} A${rad},${rad} 1 0,0 ${getAngle(as[1], Coord.X)},${getAngle(\n            as[1],\n            Coord.Y\n          )} z`}\n        ></path>\n        <path\n          style={{ fill: `${watch.coverColor}` }}\n          d={`M${rad},${rad} L${getAngle(as[2], Coord.X)},${getAngle(\n            as[2],\n            Coord.Y\n          )} A${rad},${rad} 1 0,1 ${getAngle(as[3], Coord.X)},${getAngle(\n            as[3],\n            Coord.Y\n          )} z`}\n        ></path>\n      </svg>\n      <div\n        style={{\n          width: `${watch.size * watch.innerCoverRad}px`,\n          height: `${watch.size * watch.innerCoverRad}px`,\n          borderRadius: \"50%\",\n          backgroundColor: `${watch.coverColor}`,\n          position: \"absolute\",\n          top: `${watch.size / 2 - (watch.size * watch.innerCoverRad) / 2}px`,\n          left: `${watch.size / 2 - (watch.size * watch.innerCoverRad) / 2}px`,\n        }}\n      ></div>\n    </div>\n  );\n};\n","interface ContainerProps {\n  children: React.ReactNode;\n}\n\nexport const Container = ({ children }: ContainerProps) => {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","const watch = {\n  size: 380,\n  arcSize: 15,\n  arcColor: \"#3A3A3A\",\n  bgColor: \"#2F2F2D\",\n  coverColor: \"#0D0D0D\",\n  sliceColor: \"#f1eded\",\n  hourFontsize: \"2em\",\n  minuteFontsize: \"1em\",\n  minHourColor: \"#fff\",\n  pastfutureFontsize: \"1.2em\",\n  presentFontsize: \"1.2em\",\n  accentColor: \"#b8ff49\",\n  paleColor: \"#8B8B8B\",\n  // calculation props\n  // 0 < x <= 1\n  innerHourLen: 0.9,\n  innerMinuteLen: 0.7,\n\n  // cover\n  innerCoverRad: 0.6,\n\n  // showing angle\n  showingAngle: Math.PI / 7.5,\n  // milliseconds in a day\n  millInADay: 8.64e7,\n  // milliseconds in a minute\n  millInAMin: 6e4,\n};\n\nexport default watch;\n","import React, { memo } from \"react\";\nimport watch from \"../constants\";\nimport { PositionProps, calculateProps as Calc } from \"../utils\";\nimport { TimeLine } from \"./TimeLine\";\nimport { TimeTitle } from \"./TimeTitle\";\n\nexport enum TitleType {\n  PAST,\n  PRESENT,\n  FUTURE,\n}\n\nexport const Titles = memo(() => {\n  const calculateProps = (\n    type: TitleType,\n    element: HTMLSpanElement | null\n  ): PositionProps | undefined => {\n    if (!element) return;\n    switch (type) {\n      case TitleType.PAST:\n        return Calc(\n          watch.size,\n          0.6,\n          (-3 * Math.PI) / 4,\n          element,\n          (-5 * Math.PI) / 8\n        );\n      case TitleType.PRESENT:\n        return Calc(watch.size, 0.6, Math.PI / 2, element, Math.PI / 2);\n      case TitleType.FUTURE:\n        return Calc(\n          watch.size,\n          0.6,\n          -Math.PI / 4,\n          element,\n          (-3 * Math.PI) / 8 + Math.PI\n        );\n    }\n  };\n\n  return (\n    <div\n      style={{\n        width: watch.size,\n        height: watch.size,\n        position: \"absolute\",\n        textTransform: \"uppercase\",\n        letterSpacing: \"0.2em\",\n        fontWeight: 500,\n      }}\n    >\n      <TimeTitle\n        calculateProps={calculateProps}\n        type={TitleType.PAST}\n        color={watch.paleColor}\n      >\n        past\n      </TimeTitle>\n      <TimeTitle\n        calculateProps={calculateProps}\n        type={TitleType.PRESENT}\n        color={watch.accentColor}\n      >\n        present\n      </TimeTitle>\n      <TimeTitle\n        calculateProps={calculateProps}\n        type={TitleType.FUTURE}\n        color={watch.paleColor}\n      >\n        future\n      </TimeTitle>\n      <TimeLine />\n    </div>\n  );\n});\n","import { memo, useEffect, useRef, useState } from \"react\";\nimport watch from \"../constants\";\nimport { PositionProps } from \"../utils\";\n\ninterface HourProps {\n  hour: number;\n  index: number;\n}\n\nexport const Hour = memo(({ hour, index }: HourProps) => {\n  const spanRef = useRef(null);\n  // force re-rendering\n  const [isAligned, setIsAligned] = useState<boolean>(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsAligned(true);\n    }, 100);\n  }, []);\n\n  const calculateProps = (\n    index: number,\n    element: HTMLSpanElement | null\n  ): PositionProps | undefined => {\n    if (!element) return;\n    const translation = watch.size / 2;\n    const scale = translation * watch.innerHourLen;\n    const step = Math.PI / 12;\n    const star = Math.PI / 2 + ((step * (index + 1)) % 24);\n\n    let posY = -Math.sin(star) * scale + translation;\n    posY += -element.getBoundingClientRect().height / 2;\n    let posX = -Math.cos(star) * scale + translation;\n    posX += -element.getBoundingClientRect().width / 2;\n    let rotate = ((star - Math.PI / 2) * 180) / Math.PI;\n\n    return {\n      left: `${posX}px`,\n      top: `${posY}px`,\n      transform: `rotate(${rotate}deg)`,\n    };\n  };\n\n  return (\n    <span\n      ref={spanRef}\n      style={{\n        color: `${isAligned ? \"\" : \"rgba(0,0,0,0)\"}`,\n        position: \"absolute\",\n        fontWeight: 500,\n        ...calculateProps(index, spanRef.current),\n      }}\n    >\n      {hour}\n    </span>\n  );\n});\n","import watch from \"../constants\";\nimport { Hour } from \"./Hour\";\n\ninterface HoursProps {\n  currTime: number;\n  showTransition: boolean;\n}\n\nconst hours = new Array(24).fill(null).map((_, i) => (i % 12) + 1);\n\nexport const Hours = ({ currTime, showTransition }: HoursProps) => {\n  return (\n    <div\n      style={{\n        fontSize: watch.hourFontsize,\n        color: `${watch.minHourColor}`,\n        width: `${watch.size}px`,\n        height: `${watch.size}px`,\n        position: \"absolute\",\n        top: \"0px\",\n        left: \"0px\",\n        transform: `rotate(${360 - (360 * currTime) / watch.millInADay}deg)`,\n        transition: `${showTransition ? \"transform 500ms\" : \"\"}`,\n      }}\n    >\n      {hours.map((h, index) => {\n        return <Hour key={index} hour={h} index={index} />;\n      })}\n    </div>\n  );\n};\n","import { memo, useEffect, useRef, useState } from \"react\";\nimport watch from \"../constants\";\nimport { PositionProps } from \"../utils\";\n\ninterface MinuteProps {\n  minute: number;\n  index: number;\n}\n\nexport const Minute = memo(({ minute, index }: MinuteProps) => {\n  const spanRef = useRef(null);\n  // force re-rendering\n  const [isAligned, setIsAligned] = useState<boolean>(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsAligned(true);\n    }, 100);\n  }, []);\n\n  const calculateProps = (\n    index: number,\n    element: HTMLSpanElement | null\n  ): PositionProps | undefined => {\n    if (!element) return;\n    const translation = watch.size / 2;\n    const scale = translation * watch.innerMinuteLen;\n    const step = Math.PI / 12;\n    const star = Math.PI / 2 + ((step * (index + 1)) % 24);\n\n    let posY = -Math.sin(star) * scale + translation;\n    posY += -element.getBoundingClientRect().height / 2;\n    let posX = -Math.cos(star) * scale + translation;\n    posX += -element.getBoundingClientRect().width / 2;\n    let rotate = ((star - Math.PI / 2) * 180) / Math.PI;\n\n    return {\n      left: `${posX}px`,\n      top: `${posY}px`,\n      transform: `rotate(${rotate}deg)`,\n    };\n  };\n\n  return (\n    <span\n      ref={spanRef}\n      style={{\n        color: `${isAligned ? \"\" : \"rgba(0,0,0,0)\"}`,\n        position: \"absolute\",\n        fontWeight: 500,\n        ...calculateProps(index, spanRef.current),\n      }}\n    >\n      {String(minute).padStart(2, \"0\")}\n    </span>\n  );\n});\n","import watch from \"../constants\";\nimport { Minute } from \"./Minute\";\n\ninterface MinutesProps {\n  currTime: number;\n  showTransition: boolean;\n}\n\nconst minutes = new Array(24).fill(null).map((_, i) => (i * 5 + 5) % 60);\n\nexport const Minutes = ({ currTime, showTransition }: MinutesProps) => {\n  return (\n    <div\n      style={{\n        fontSize: watch.minuteFontsize,\n        fontWeight: 400,\n        color: `${watch.minHourColor}`,\n        width: `${watch.size}px`,\n        height: `${watch.size}px`,\n        position: \"absolute\",\n        top: \"0px\",\n        left: \"0px\",\n        transform: `rotate(${\n          (360 - 360 * (currTime / (watch.millInADay / 12))) % 360\n        }deg)`,\n        transition: `${showTransition ? \"transform 500ms\" : \"\"}`,\n      }}\n    >\n      {minutes.map((m, index) => {\n        return <Minute key={index} minute={m} index={index} />;\n      })}\n    </div>\n  );\n};\n","export interface PositionProps {\n  left: string;\n  top: string;\n  transform: string;\n}\n\nconst calculateProps = (\n  size: number,\n  radius: number,\n  angle: number,\n  element: HTMLSpanElement,\n  rotAngle: number\n): PositionProps => {\n  const translation = size / 2;\n  const scale = translation * radius;\n\n  let posY = Math.sin(angle) * scale + translation;\n  posY += -element.getBoundingClientRect().height / 2;\n  let posX = Math.cos(angle) * scale + translation;\n  posX += -element.getBoundingClientRect().width / 2;\n  let rotate = ((rotAngle + Math.PI) * 180) / Math.PI;\n\n  return {\n    left: `${posX}px`,\n    top: `${posY}px`,\n    transform: `rotate(${rotate}deg)`,\n  };\n};\n\nexport { calculateProps };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport watch from \"../constants\";\nimport { calculateProps as calc } from \"../utils\";\n\ninterface TimeLineProps {}\n\nexport const TimeLine = ({}) => {\n  const spanRef = useRef(null);\n  // force re-rendering\n  const [isAligned, setIsAligned] = useState<boolean>(false);\n\n  const calculateProps = (element: HTMLSpanElement | null) => {\n    if (!element) return;\n    return calc(watch.size, -0.35, Math.PI / 2, element, Math.PI / 2);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsAligned(true);\n    }, 100);\n  }, []);\n\n  return (\n    <span\n      ref={spanRef}\n      style={{\n        position: \"absolute\",\n        height: \"2px\",\n        width: `${watch.size * 0.6}px`,\n        backgroundColor: `${isAligned ? watch.accentColor : \"rgba(0,0,0,0)\"}`,\n        ...calculateProps(spanRef.current),\n      }}\n    ></span>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { PositionProps } from \"../utils\";\nimport { TitleType } from \"./Titles\";\n\ninterface TimeTitleProps {\n  type: TitleType;\n  calculateProps: (\n    type: TitleType,\n    element: HTMLSpanElement | null\n  ) => PositionProps | undefined;\n  children: React.ReactNode;\n  color: string;\n}\n\nexport const TimeTitle = ({\n  type,\n  calculateProps,\n  children,\n  color,\n}: TimeTitleProps) => {\n  const spanRef = useRef(null);\n  // force re-rendering\n  const [isAligned, setIsAligned] = useState<boolean>(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsAligned(true);\n    }, 100);\n  }, []);\n\n  return (\n    <span\n      ref={spanRef}\n      style={{\n        position: \"absolute\",\n        color: `${isAligned ? color : \"rgba(0,0,0,0)\"}`,\n        ...calculateProps(type, spanRef.current),\n      }}\n    >\n      {children}\n    </span>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport watch from \"../constants\";\nimport { Cover } from \"./Cover\";\nimport { Hours } from \"./Hours\";\nimport { Minutes } from \"./Minutes\";\nimport { Titles } from \"./Titles\";\n\ninterface WatchProps {}\n\nexport const Watch = ({}: WatchProps) => {\n  const today = new Date();\n  // milliseconds at star of the day\n  let start = new Date(\n    today.getFullYear(),\n    today.getMonth(),\n    today.getDate(),\n    0,\n    0,\n    0\n  ).getTime();\n  const [currTime, setCurrTime] = useState<number>(0);\n  // state is set to true to show transition at the start\n  const [showTransition, setShowTransition] = useState<boolean>(true);\n  useEffect(() => {\n    const tick = () => {\n      setTimeout(() => {\n        setCurrTime(new Date().getTime() - start);\n        requestAnimationFrame(tick);\n      }, 1000 / 1);\n    };\n    tick();\n  }, [start]);\n\n  const handleVisibilityChange = () => {\n    if (document.visibilityState === \"visible\") {\n      setShowTransition(true);\n    } else {\n      setShowTransition(false);\n    }\n  };\n\n  const removeTransitionDelayed = () => {\n    setTimeout(() => {\n      setShowTransition(false);\n    }, 2000);\n  };\n\n  // after first rendering remove transition property\n  // to avoid bad animation transition\n  useEffect(() => {\n    if (showTransition) removeTransitionDelayed();\n  }, [showTransition]);\n\n  useEffect(() => {\n    // remove transition of first rendering same as above useEffect\n    removeTransitionDelayed();\n\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n  }, []);\n\n  return (\n    <div\n      style={{\n        border: `${watch.arcSize}px solid ${watch.arcColor}`,\n        borderRadius: \"50%\",\n        backgroundColor: `${watch.bgColor}`,\n        width: watch.size,\n        height: watch.size,\n        position: \"relative\",\n      }}\n    >\n      <Hours currTime={currTime} showTransition={showTransition} />\n      <Minutes currTime={currTime} showTransition={showTransition} />\n      <Cover />\n      <Titles />\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { Container } from \"./components/Container\";\nimport { Watch } from \"./components/Watch\";\n\nfunction App() {\n  return (\n    <Container>\n      <Watch />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}